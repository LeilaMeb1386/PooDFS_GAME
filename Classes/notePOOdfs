ensuite: sudo add-apt-repository ppa:ondrej/php
sudo apt install apache2
sudo apt update
on install php7.2
sudo apt install php7.2
on lie apache et php
sudo apt install libapache2-mod-php7.2
sudo apt install mysql-server

on lie sql et php
 sudo apt install php7.2-mysql
on active les erreurs php
sudo nano /etc/php/7.2/apache2/php.ini

sudo nano /etc/apache2/envvars :on change les deux lignes en:
export APACHE_RUN_USER=vagrant
export APACHE_RUN_GROUP=vagrant

sudo apt install php-xdebug

$this represente l'obejt en cours
seft represente la classe en cours

//attribut et methode statique
//methode statqiue
public static function speak()
{
 return "je suis une fonction statique et je peux etre appeléee uniquement par une classe et non pas un objet "
}

dans l'index
echo Character::speak();

//attribut statiques
appartient a la classe et non a l'objet
private statique $message ="je suis un texte provenant d'un attribut statique"

//dans l'index
public static function speak(): ?string
{
return self::$message;
}

//l'heritage en objet
protected les classes filles pourront avoir accès
private les classe ne pourront pas avoir accès





//tp a faire
Lien : codepile.net/pile/dfs16poo

Vous allez devoir créer une application qui devra utiliser la POO au maximum.

Elle devra permettre de C.R.U.D des personnages, et la structure du code vous sera propre.
Vous pourrez créer plusieurs fichiers pour gérer vos différentes actions, ou tout regrouper dans une seule classe et différentes méthodes (à vous de juger quelle méthode est la plus pertinente)

Vous devrez donc faire la meilleure utilisation de PHP ainsi que de la P.O.O, et cela passe bien évidemment par la création d'objet et par l'utilisation de méthodes statiques.

Le reste de la validation déprendra de votre créativité et ce que vous ajouterez de manière pertinente à votre projet.


Certains critères seront très surveillés, comme la propreté de votre code (cela passe également par le typehint), la pertinence des données traitées (avec vérification de l'existence de cette donnée, son type, etc)

L'organisation de votre code (fichiers, dossiers) sera évidemment important.






NB : Une notion ou deux viendront s'ajouter durant la matinée de mercredi.
